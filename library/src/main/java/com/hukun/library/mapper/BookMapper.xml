<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hukun.library.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="com.hukun.library.model.Book" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="publish" property="publish" jdbcType="VARCHAR" />
    <result column="ISBN" property="isbn" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="classId" property="classId" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BookResultMap" type="com.hukun.library.model.Book" extends="BaseResultMap">
    <association property="bookClass" javaType="com.hukun.library.model.BookClass">
      <id column="bcid" property="id"/>
      <result column="bcname" property="name"/>
    </association>
  </resultMap>
  <resultMap id="BookRecordBaseMap" type="com.hukun.library.model.Book" extends="BaseResultMap">
    <association property="readers" javaType="com.hukun.library.model.Reader">
      <id property="id" column="rid"/>
      <result property="name" column="rname"/>
      <result property="sex" column="rsex"/>
      <result property="email" column="remail"/>
      <result property="phone" column="rphone"/>
      <result property="address" column="raddress"/>
      <result property="isenable" column="risenable"/>
    </association>
    <association property="lendInfo" javaType="com.hukun.library.model.LendInfo">
      <id property="id" column="lid"/>
      <result property="lendDate" column="lldate"/>
      <result property="backDate" column="lbdate"/>
      <result property="isback" column="lback"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, author, publish, ISBN, price, classId,number
  </sql>
  <select id="getAllBookRecord" resultMap="BookRecordBaseMap">
    select b.*,r.id as rid,r.name as rname,r.sex as rsex,r.birth as rbirth,r.email as remail,r.phone as
    rphone,r.address as raddress,r.isenable as risenable,
    l.id as lid,l.lend_date as lldate,l.back_date as lbdate,l.isback as lback
    from book b,reader r,lendinfo l where b.id=l.b_id and l.r_id=r.id
    <if test="keyword!=null and keyword!=''">
      and r.name like concat('%',#{keyword},'%')
    </if>
    order by lid desc
    limit #{page},#{size}
  </select>
  <select id="getRecordTotal" resultType="long">
    select count(*) from lendinfo l
    <if test="keyword!=null and keyword!=''">
      where l.b_id=(select id from book where name like concat('%',#{keyword},'%'))
    </if>
  </select>
  <delete id="deleteBookByIds">
    delete from book where id in
    <foreach collection="ids" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>
  <select id="getTotal" resultType="long">
    select COUNT(*) from book b
    <if test="keyword!=null and keyword!=''">
    where b.name like concat('%',#{keyword},'%')
    </if>
  </select>
  <select id="getBookByPage" resultMap="BookResultMap">
    select b.*,bc.id as bcid,bc.name as bcname from book b,book_class bc where b.classId=bc.id
     <if test="keyword!=null and keyword!=''">
       and b.name like concat('%',#{keyword},'%')
     </if>
    order by b.id limit #{page},#{size}
  </select>
  <update id="updateBookNumber" parameterType="integer">
    update book set number=number-1 where id=#{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hukun.library.model.Book" >
    insert into book (id, name, author, 
      publish, ISBN, price, 
      classId, number)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{publish,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{classId,jdbcType=INTEGER}, #{number,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hukun.library.model.Book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="publish != null" >
        publish,
      </if>
      <if test="isbn != null" >
        ISBN,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="classId != null" >
        classId,
      </if>
      <if test="number != null" >
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null" >
        #{publish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hukun.library.model.Book" >
    update book
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null" >
        publish = #{publish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        ISBN = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="classId != null" >
        classId = #{classId,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hukun.library.model.Book" >
    update book
    set name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publish = #{publish,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      classId = #{classId,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>